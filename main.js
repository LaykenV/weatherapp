(()=>{const e=document.querySelector("#cityinput"),t=document.querySelector("h2"),n=document.querySelector("h3"),o=document.querySelector(".weatherd"),c=document.querySelector(".hightemp"),r=document.querySelector(".lowtemp"),a=document.querySelector(".feelslike"),i=document.querySelector(".humidity"),u=document.querySelector("#btn"),l=document.querySelector(".farenheit"),d=document.querySelector(".celcius"),m=document.querySelector("#weatherpic");async function s(e){if(""!==e.value&&void 0!==e.value){const u=e.value,l=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${u}&limit=1&appid=7cca887bcacb1085e8fd6421b8128128`,{mode:"cors"}),s=await l.json(),h=await s[0].lon,y=await s[0].lat,p=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${y}&lon=${h}&units=imperial&appid=7cca887bcacb1085e8fd6421b8128128`,{mode:"cors"}),C=await p.json();console.log(C);const f=C.name;let g=Math.round(C.main.temp),w=Math.round(C.main.feels_like);const q=C.main.humidity;let b=Math.round(C.main.temp_max),S=Math.round(C.main.temp_min);const k=C.weather[0].main;"Rain"==k&&(m.src="./img/rain.png"),"Clouds"==k&&(m.src="./img/cloudy.png"),"Clear"==k&&(m.src="./img/clear.png");const v=C.sys.country;"honeydew"==d.style.backgroundColor&&(g=Math.round(farenheitToCelcius(g)),w=Math.round(farenheitToCelcius(w)),b=Math.round(farenheitToCelcius(b)),S=Math.round(farenheitToCelcius(S))),t.textContent=f+`, ${v}`,n.textContent=g+"째",o.textContent=k,c.textContent="H: "+b+"째",r.textContent="L: "+S+"째",a.textContent="Feels like "+w+"째",i.textContent="Humidity: "+q+"%"}}u.addEventListener("click",(function(t){""!==e.value&&s(e)})),d.addEventListener("click",(function(){l.style.backgroundColor="inherit",d.style.backgroundColor="honeydew",s(e)})),l.addEventListener("click",(function(){d.style.backgroundColor="inherit",l.style.backgroundColor="honeydew",s(e)})),farenheitToCelcius=function(e){return 5*(e-32)/9}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,